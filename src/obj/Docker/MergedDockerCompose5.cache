name: dockercompose17374161067342188174
services:
  BasketDb:
    image: mongo
    networks:
      default: null
  CatalogDb:
    container_name: CatalogDb
    image: mongo
    networks:
      default: null
    ports:
    - mode: ingress
      target: 27017
      published: "27017"
      protocol: tcp
    restart: always
    volumes:
    - type: volume
      source: mongo_data
      target: /data/db
      volume: {}
  basket.api:
    build:
      context: C:\Users\Muhammad.Hussain\Desktop\Learning\DotNetMastery\.NET Microservices\Microservice
        course\Project\src
      dockerfile: Basket.API/Dockerfile
    container_name: basket.api
    depends_on:
      BasketDb:
        condition: service_started
        required: true
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      CacheSettings:ConnectionString: BasketDb:6379
    image: basketapi
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      published: "8001"
      protocol: tcp
  catalog.api:
    build:
      context: C:\Users\Muhammad.Hussain\Desktop\Learning\DotNetMastery\.NET Microservices\Microservice
        course\Project\src
      dockerfile: Catalog.API/Dockerfile
    container_name: catalog.api
    depends_on:
      CatalogDb:
        condition: service_started
        required: true
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      DatabaseSettings:ConnectionString: mongodb://CatalogDb:27017/
    image: catalogapi
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      published: "8000"
      protocol: tcp
networks:
  default:
    name: dockercompose17374161067342188174_default
volumes:
  mongo_data:
    name: dockercompose17374161067342188174_mongo_data