name: dockercompose17374161067342188174
services:
  BasketDb:
    container_name: CatalogDb
    image: redis:alpine
    networks:
      default: null
    ports:
    - mode: ingress
      target: 6379
      published: "6379"
      protocol: tcp
    restart: always
  CatalogDb:
    container_name: CatalogDb
    image: mongo
    networks:
      default: null
    ports:
    - mode: ingress
      target: 27017
      published: "27017"
      protocol: tcp
    restart: always
    volumes:
    - type: volume
      source: mongo_data
      target: /data/db
      volume: {}
  basket.api:
    build:
      context: C:\Users\Muhammad.Hussain\Desktop\Learning\DotNetMastery\.NET Microservices\Microservice
        course\Project\src
      dockerfile: Basket.API/Dockerfile
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: Basket.API
    container_name: basket.api
    depends_on:
      BasketDb:
        condition: service_started
        required: true
    entrypoint:
    - tail
    - -f
    - /dev/null
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      CacheSettings:ConnectionString: BasketDb:6379
    image: basketapi
    labels:
      com.microsoft.visual-studio.project-name: Basket.API
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /root/.nuget/packages
        --additionalProbingPath /root/.nuget/fallbackpackages  ""'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof
        dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      published: "8001"
      protocol: tcp
    tty: true
    volumes:
    - type: bind
      source: C:\Users\Muhammad.Hussain\vsdbg\vs2017u5
      target: /remote_debugger
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Muhammad.Hussain\AppData\Roaming/ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Muhammad.Hussain\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Program Files\Microsoft Visual Studio\2022\Enterprise\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\TokenService.Proxy\linux-x64\net7.0
      target: /TokenService.Proxy
      read_only: true
      bind:
        create_host_path: true
  catalog.api:
    build:
      context: C:\Users\Muhammad.Hussain\Desktop\Learning\DotNetMastery\.NET Microservices\Microservice
        course\Project\src
      dockerfile: Catalog.API/Dockerfile
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: Catalog.API
    container_name: catalog.api
    depends_on:
      CatalogDb:
        condition: service_started
        required: true
    entrypoint:
    - tail
    - -f
    - /dev/null
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      DatabaseSettings:ConnectionString: mongodb://CatalogDb:27017/
    image: catalogapi
    labels:
      com.microsoft.visual-studio.project-name: Catalog.API
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /root/.nuget/packages
        --additionalProbingPath /root/.nuget/fallbackpackages  ""'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof
        dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      published: "8000"
      protocol: tcp
    tty: true
    volumes:
    - type: bind
      source: C:\Users\Muhammad.Hussain\vsdbg\vs2017u5
      target: /remote_debugger
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Muhammad.Hussain\AppData\Roaming/ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Muhammad.Hussain\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Program Files\Microsoft Visual Studio\2022\Enterprise\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\TokenService.Proxy\linux-x64\net7.0
      target: /TokenService.Proxy
      read_only: true
      bind:
        create_host_path: true
networks:
  default:
    name: dockercompose17374161067342188174_default
volumes:
  mongo_data:
    name: dockercompose17374161067342188174_mongo_data