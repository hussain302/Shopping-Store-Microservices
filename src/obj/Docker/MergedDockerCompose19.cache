name: dockercompose11801360500213240908
services:
  BasketDb:
    container_name: BasketDb
    image: redis:alpine
    networks:
      default: null
    ports:
      - mode: ingress
        target: 6379
        published: "6379"
        protocol: tcp
    restart: always
  CatalogDb:
    container_name: CatalogDb
    image: mongo
    networks:
      default: null
    ports:
      - mode: ingress
        target: 27017
        published: "27017"
        protocol: tcp
    restart: always
    volumes:
      - type: volume
        source: mongo_data
        target: /data/db
        volume: {}
  basket.api:
    build:
      context: C:\Users\RBTG V2\Source\Repos\hussain302\Shopping-Store-Microservices\src
      dockerfile: Basket.API/Dockerfile
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: Basket.API
    container_name: basket.api
    depends_on:
      BasketDb:
        condition: service_started
        required: true
    entrypoint:
      - tail
      - -f
      - /dev/null
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      CacheSettings:ConnectionString: BasketDb:6379
    image: basketapi
    labels:
      com.microsoft.visual-studio.project-name: Basket.API
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /root/.nuget/packages --additionalProbingPath /root/.nuget/fallbackpackages  "/app/Basket.API.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      default: null
    ports:
      - mode: ingress
        target: 80
        published: "8001"
        protocol: tcp
    tty: true
    volumes:
      - type: bind
        source: C:\Users\RBTG V2\vsdbg\vs2017u5
        target: /remote_debugger
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\RBTG V2\AppData\Roaming/ASP.NET/Https
        target: /root/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\RBTG V2\AppData\Roaming/Microsoft/UserSecrets
        target: /root/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
  catalog.api:
    build:
      context: C:\Users\RBTG V2\Source\Repos\hussain302\Shopping-Store-Microservices\src
      dockerfile: Catalog.API/Dockerfile
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: Catalog.API
    container_name: catalog.api
    depends_on:
      CatalogDb:
        condition: service_started
        required: true
    entrypoint:
      - tail
      - -f
      - /dev/null
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      DatabaseSettings:ConnectionString: mongodb://CatalogDb:27017/
    image: catalogapi
    labels:
      com.microsoft.visual-studio.project-name: Catalog.API
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /root/.nuget/packages --additionalProbingPath /root/.nuget/fallbackpackages  "/app/Catalog.API.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      default: null
    ports:
      - mode: ingress
        target: 80
        published: "8000"
        protocol: tcp
    tty: true
    volumes:
      - type: bind
        source: C:\Users\RBTG V2\vsdbg\vs2017u5
        target: /remote_debugger
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\RBTG V2\AppData\Roaming/ASP.NET/Https
        target: /root/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\RBTG V2\AppData\Roaming/Microsoft/UserSecrets
        target: /root/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
networks:
  default:
    name: dockercompose11801360500213240908_default
volumes:
  mongo_data:
    name: dockercompose11801360500213240908_mongo_data